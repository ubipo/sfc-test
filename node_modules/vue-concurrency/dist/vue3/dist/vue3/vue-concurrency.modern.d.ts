declare function g(e: any, n: any): any;
declare function _(e: any): void;
declare function p(e: any): Promise<any>;
declare function h(e: any): any;
declare function q(...e: any[]): any;
declare function E(e: any, ...n: any[]): any;
declare function D(n: any, r: any): void;
declare function C(...e: any[]): any;
declare function m(n: any): any;
declare function O(r: any): any;
declare function w(e: any, n: any): any;
declare function c(e: any): Promise<any>;
export { g as getCancelToken, _ as printTask, p as timeout, h as useAsyncTask, q as useParallelTask, E as usePipeTask, D as useSSRPersistance, C as useSequentialTask, m as useTask, O as useTaskGroup, w as useTaskPrefetch, c as waitForValue };
