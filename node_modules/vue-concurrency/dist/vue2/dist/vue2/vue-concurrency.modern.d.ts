declare function h(e: any, n: any): any;
declare function p(e: any): void;
declare function g(e: any): Promise<any>;
declare function m(e: any): any;
declare function y(...e: any[]): any;
declare function q(e: any, ...n: any[]): any;
declare function j(e: any, n: any): void;
declare function C(...e: any[]): any;
declare function E(n: any): any;
declare function F(s: any): any;
declare function b(e: any, n: any): any;
declare function o(e: any): Promise<any>;
export { h as getCancelToken, p as printTask, g as timeout, m as useAsyncTask, y as useParallelTask, q as usePipeTask, j as useSSRPersistance, C as useSequentialTask, E as useTask, F as useTaskGroup, b as useTaskPrefetch, o as waitForValue };
